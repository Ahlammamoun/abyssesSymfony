security:
    enable_authenticator_manager: true
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider
            stateless: false 
            form_login:
                login_path: app_login
                check_path: app_login
            logout:
                path: /api/logout
                invalidate_session: true

when@test:
    security:
        enable_authenticator_manager: true
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
        access_control:
            # - { path: ^/admin, roles: ROLE_ADMIN }

        role_hierarchy: 
            ROLE_ADMIN: [ROLE_USER]  # ROLE_ADMIN héritera de tous les privilèges de ROLE_USER
            ROLE_MANAGER: ROLE_MANAGER
            ROLE_USER: ROLE_USER

services:
    # Ajoutez ici d'autres services si nécessaire
